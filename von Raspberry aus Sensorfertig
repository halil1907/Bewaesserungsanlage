import spidev
import os
import time
import RPi.GPIO as GPIO
import pymysql
#import pymysql

conn = pymysql.connect(
    host="localhost",
    database="wochenplan",
    user="attendanceadmin",
    password="pimylifeup"
)

cur = conn.cursor()
cur.execute("SELECT * FROM Grenzwert")
rows = cur.fetchall()
for row in rows:
    print(row[2])
    Grenzwert = int((row[2]))

cur = conn.cursor()
cur.execute("SELECT * FROM steuerung2")
rows = cur.fetchall()
for row in rows:
    print(row[3])
dauer1 =( str(row[3] ))
 
cur = conn.cursor()
cur.execute("SELECT * FROM steuerung2")
rows = cur.fetchall()
for row in rows:
    print(row[4])
    dauer2 = row[4]
    
cur = conn.cursor()
cur.execute("SELECT * FROM steuerung2")
rows = cur.fetchall()
for row in rows:
    print(row[5])
    
cur = conn.cursor()
cur.execute("SELECT * FROM steuerung2")
rows =cur.fetchall()
for row in rows:
    print(row[6])
    
#conn.close()

Grenzwert = row[2]
dauer1 = row[3]  
dauer2 = row[4]
dauer3 = row[5]
dauer4 = row[6]

GPIO.setmode(GPIO.BCM)
RELAIS_1_GPIO = 17
GPIO.setup(RELAIS_1_GPIO, GPIO.OUT)

GPIO.setmode(GPIO.BCM)
GPIO.setup(23, GPIO.OUT)

GPIO.setmode(GPIO.BCM)
GPIO.setup(24, GPIO.OUT)

GPIO.setmode(GPIO.BCM)
GPIO.setup(4, GPIO.OUT)

GPIO.setmode(GPIO.BCM)
GPIO.setup(22, GPIO.OUT)

delay = 5
spi = spidev.SpiDev()
spi.open(0,0)
spi.max_speed_hz=1000000

def readChannel(channel):
    val = spi.xfer2([1,(8+channel)<<4,0])
    data = ((val[1]&3) << 8) + val[2]
    return data

if __name__ == "__main__":
    try:
        while True:
            val = readChannel(0)
            if val >= Grenzwert:
                print("Trocken")
                for i in range(1):
           
                    GPIO.output(RELAIS_1_GPIO, GPIO.LOW)        
                    GPIO.output(23, GPIO.HIGH)
                    time.sleep(dauer1)
                    GPIO.output(23, GPIO.LOW)
                    time.sleep(0.5)
                
                    GPIO.output(24, GPIO.HIGH)
                    time.sleep(dauer2)
                    GPIO.output(24, GPIO.LOW)
                    time.sleep(0.5)
    
                    GPIO.output(4, GPIO.HIGH)
                    time.sleep(dauer3)
                    GPIO.output(4, GPIO.LOW)
                    time.sleep(0.5)
    
                    GPIO.output(22, GPIO.HIGH)
                    time.sleep(dauer4)
                    GPIO.output(22, GPIO.LOW)
                    time.sleep(0.5)
                    
                print("Fertig gegossen")
            else:
                     print("feucht genug")
                     time.sleep(5)
            GPIO.output(RELAIS_1_GPIO, GPIO.HIGH)         
            GPIO.cleanup()
    except KeyboardInterrupt:
          print ("Cancel.")
